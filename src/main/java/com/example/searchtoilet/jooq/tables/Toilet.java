/**
 * This class is generated by jOOQ
 */
package com.example.searchtoilet.jooq.tables;


import com.example.searchtoilet.jooq.Public;
import com.example.searchtoilet.utils.PostgresGeometryBinding;
import com.vividsolutions.jts.geom.Geometry;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Toilet extends TableImpl<Record> {

	private static final long serialVersionUID = 1602388789;

	/**
	 * The reference instance of <code>public.toilet</code>
	 */
	public static final Toilet TOILET = new Toilet();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>public.toilet.category</code>.
	 */
	public final TableField<Record, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>public.toilet.name</code>.
	 */
	public final TableField<Record, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>public.toilet.streetaddress</code>.
	 */
	public final TableField<Record, String> STREETADDRESS = createField("streetaddress", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>public.toilet.originaladdress</code>.
	 */
	public final TableField<Record, String> ORIGINALADDRESS = createField("originaladdress", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>public.toilet.phonenumber</code>.
	 */
	public final TableField<Record, String> PHONENUMBER = createField("phonenumber", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>public.toilet.operationtime</code>.
	 */
	public final TableField<Record, String> OPERATIONTIME = createField("operationtime", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>public.toilet.latitude</code>.
	 */
	public final TableField<Record, Double> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.toilet.longitude</code>.
	 */
	public final TableField<Record, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>public.toilet.moddate</code>.
	 */
	public final TableField<Record, Date> MODDATE = createField("moddate", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>public.toilet.geometry</code>.
	 */
	public final TableField<Record, Geometry> GEOMETRY = createField("geometry", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "", new PostgresGeometryBinding());

	/**
	 * The column <code>public.toilet.distance</code>.
	 */
	public final TableField<Record, Double> DISTANCE = createField("distance", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * Create a <code>public.toilet</code> table reference
	 */
	public Toilet() {
		this("toilet", null);
	}

	/**
	 * Create an aliased <code>public.toilet</code> table reference
	 */
	public Toilet(String alias) {
		this(alias, TOILET);
	}

	private Toilet(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Toilet(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Toilet as(String alias) {
		return new Toilet(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Toilet rename(String name) {
		return new Toilet(name, null);
	}
}
